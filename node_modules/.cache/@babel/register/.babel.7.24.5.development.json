{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\BaiTapweb\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\BaiTapweb\\\\backend\",\"filename\":\"D:\\\\BaiTapweb\\\\backend\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\BaiTapweb\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const express = require(\"express\");\nconst cors = require(\"cors\");\nconst mongoose = require(\"mongoose\");\nconst userRouter = require(\"./Routes/userRoute\");\nconst photoRouter = require(\"./Routes/photoRoute\");\nrequire(\"dotenv\").config();\nconst app = express();\nconst cookieParser = require(\"cookie-parser\");\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(cookieParser());\napp.use(cors({\n  origin: \"http://localhost:3000\",\n  credentials: true\n}));\napp.use(\"\", userRouter);\napp.use(\"\", photoRouter);\nconst port = process.env.PORT || 8000;\nconst uri = process.env.URI;\nconsole.log(\"check uri\", uri);\napp.listen(port, () => {\n  console.log(`server running on port:${port}`);\n});\nmongoose.connect(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log(\"Mongodb connect establish\")).catch(error => console.log(\"MongoDB connection failed\"));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImNvcnMiLCJtb25nb29zZSIsInVzZXJSb3V0ZXIiLCJwaG90b1JvdXRlciIsImNvbmZpZyIsImFwcCIsImNvb2tpZVBhcnNlciIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJvcmlnaW4iLCJjcmVkZW50aWFscyIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVyaSIsIlVSSSIsImNvbnNvbGUiLCJsb2ciLCJsaXN0ZW4iLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidGhlbiIsImNhdGNoIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IkQ6XFxCYWlUYXB3ZWJcXGJhY2tlbmRcXCIsInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xyXG5jb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIik7XHJcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5jb25zdCB1c2VyUm91dGVyID0gcmVxdWlyZShcIi4vUm91dGVzL3VzZXJSb3V0ZVwiKTtcclxuY29uc3QgcGhvdG9Sb3V0ZXIgPSByZXF1aXJlKFwiLi9Sb3V0ZXMvcGhvdG9Sb3V0ZVwiKTtcclxuXHJcbnJlcXVpcmUoXCJkb3RlbnZcIikuY29uZmlnKCk7XHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgY29va2llUGFyc2VyID0gcmVxdWlyZShcImNvb2tpZS1wYXJzZXJcIik7XHJcblxyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcclxuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XHJcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xyXG5cclxuYXBwLnVzZShjb3JzKHsgb3JpZ2luOiBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMFwiLCBjcmVkZW50aWFsczogdHJ1ZSB9KSk7XHJcbmFwcC51c2UoXCJcIiwgdXNlclJvdXRlcik7XHJcbmFwcC51c2UoXCJcIiwgcGhvdG9Sb3V0ZXIpO1xyXG5cclxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgODAwMDtcclxuY29uc3QgdXJpID0gcHJvY2Vzcy5lbnYuVVJJO1xyXG5jb25zb2xlLmxvZyhcImNoZWNrIHVyaVwiLCB1cmkpO1xyXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgc2VydmVyIHJ1bm5pbmcgb24gcG9ydDoke3BvcnR9YCk7XHJcbn0pO1xyXG5tb25nb29zZVxyXG4gIC5jb25uZWN0KHVyaSwge1xyXG4gICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxyXG4gICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxyXG4gIH0pXHJcbiAgLnRoZW4oKCkgPT4gY29uc29sZS5sb2coXCJNb25nb2RiIGNvbm5lY3QgZXN0YWJsaXNoXCIpKVxyXG4gIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUubG9nKFwiTW9uZ29EQiBjb25uZWN0aW9uIGZhaWxlZFwiKSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QixNQUFNRSxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFDcEMsTUFBTUcsVUFBVSxHQUFHSCxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDaEQsTUFBTUksV0FBVyxHQUFHSixPQUFPLENBQUMscUJBQXFCLENBQUM7QUFFbERBLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQ0ssTUFBTSxDQUFDLENBQUM7QUFDMUIsTUFBTUMsR0FBRyxHQUFHUCxPQUFPLENBQUMsQ0FBQztBQUNyQixNQUFNUSxZQUFZLEdBQUdQLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFFN0NNLEdBQUcsQ0FBQ0UsR0FBRyxDQUFDVCxPQUFPLENBQUNVLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDdkJILEdBQUcsQ0FBQ0UsR0FBRyxDQUFDVCxPQUFPLENBQUNXLFVBQVUsQ0FBQztFQUFFQyxRQUFRLEVBQUU7QUFBSyxDQUFDLENBQUMsQ0FBQztBQUMvQ0wsR0FBRyxDQUFDRSxHQUFHLENBQUNELFlBQVksQ0FBQyxDQUFDLENBQUM7QUFFdkJELEdBQUcsQ0FBQ0UsR0FBRyxDQUFDUCxJQUFJLENBQUM7RUFBRVcsTUFBTSxFQUFFLHVCQUF1QjtFQUFFQyxXQUFXLEVBQUU7QUFBSyxDQUFDLENBQUMsQ0FBQztBQUNyRVAsR0FBRyxDQUFDRSxHQUFHLENBQUMsRUFBRSxFQUFFTCxVQUFVLENBQUM7QUFDdkJHLEdBQUcsQ0FBQ0UsR0FBRyxDQUFDLEVBQUUsRUFBRUosV0FBVyxDQUFDO0FBRXhCLE1BQU1VLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFHLENBQUNDLElBQUksSUFBSSxJQUFJO0FBQ3JDLE1BQU1DLEdBQUcsR0FBR0gsT0FBTyxDQUFDQyxHQUFHLENBQUNHLEdBQUc7QUFDM0JDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFdBQVcsRUFBRUgsR0FBRyxDQUFDO0FBQzdCWixHQUFHLENBQUNnQixNQUFNLENBQUNSLElBQUksRUFBRSxNQUFNO0VBQ3JCTSxPQUFPLENBQUNDLEdBQUcsQ0FBRSwwQkFBeUJQLElBQUssRUFBQyxDQUFDO0FBQy9DLENBQUMsQ0FBQztBQUNGWixRQUFRLENBQ0xxQixPQUFPLENBQUNMLEdBQUcsRUFBRTtFQUNaTSxlQUFlLEVBQUUsSUFBSTtFQUNyQkMsa0JBQWtCLEVBQUU7QUFDdEIsQ0FBQyxDQUFDLENBQ0RDLElBQUksQ0FBQyxNQUFNTixPQUFPLENBQUNDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLENBQ3BETSxLQUFLLENBQUVDLEtBQUssSUFBS1IsT0FBTyxDQUFDQyxHQUFHLENBQUMsMkJBQTJCLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["express","require","cors","mongoose","userRouter","photoRouter","config","app","cookieParser","use","json","urlencoded","extended","origin","credentials","port","process","env","PORT","uri","URI","console","log","listen","connect","useNewUrlParser","useUnifiedTopology","then","catch","error"],"sourceRoot":"D:\\BaiTapweb\\backend\\","sources":["index.js"],"sourcesContent":["const express = require(\"express\");\r\nconst cors = require(\"cors\");\r\nconst mongoose = require(\"mongoose\");\r\nconst userRouter = require(\"./Routes/userRoute\");\r\nconst photoRouter = require(\"./Routes/photoRoute\");\r\n\r\nrequire(\"dotenv\").config();\r\nconst app = express();\r\nconst cookieParser = require(\"cookie-parser\");\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(cookieParser());\r\n\r\napp.use(cors({ origin: \"http://localhost:3000\", credentials: true }));\r\napp.use(\"\", userRouter);\r\napp.use(\"\", photoRouter);\r\n\r\nconst port = process.env.PORT || 8000;\r\nconst uri = process.env.URI;\r\nconsole.log(\"check uri\", uri);\r\napp.listen(port, () => {\r\n  console.log(`server running on port:${port}`);\r\n});\r\nmongoose\r\n  .connect(uri, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n  })\r\n  .then(() => console.log(\"Mongodb connect establish\"))\r\n  .catch((error) => console.log(\"MongoDB connection failed\"));\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMG,UAAU,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAChD,MAAMI,WAAW,GAAGJ,OAAO,CAAC,qBAAqB,CAAC;AAElDA,OAAO,CAAC,QAAQ,CAAC,CAACK,MAAM,CAAC,CAAC;AAC1B,MAAMC,GAAG,GAAGP,OAAO,CAAC,CAAC;AACrB,MAAMQ,YAAY,GAAGP,OAAO,CAAC,eAAe,CAAC;AAE7CM,GAAG,CAACE,GAAG,CAACT,OAAO,CAACU,IAAI,CAAC,CAAC,CAAC;AACvBH,GAAG,CAACE,GAAG,CAACT,OAAO,CAACW,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAC/CL,GAAG,CAACE,GAAG,CAACD,YAAY,CAAC,CAAC,CAAC;AAEvBD,GAAG,CAACE,GAAG,CAACP,IAAI,CAAC;EAAEW,MAAM,EAAE,uBAAuB;EAAEC,WAAW,EAAE;AAAK,CAAC,CAAC,CAAC;AACrEP,GAAG,CAACE,GAAG,CAAC,EAAE,EAAEL,UAAU,CAAC;AACvBG,GAAG,CAACE,GAAG,CAAC,EAAE,EAAEJ,WAAW,CAAC;AAExB,MAAMU,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AACrC,MAAMC,GAAG,GAAGH,OAAO,CAACC,GAAG,CAACG,GAAG;AAC3BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,GAAG,CAAC;AAC7BZ,GAAG,CAACgB,MAAM,CAACR,IAAI,EAAE,MAAM;EACrBM,OAAO,CAACC,GAAG,CAAE,0BAAyBP,IAAK,EAAC,CAAC;AAC/C,CAAC,CAAC;AACFZ,QAAQ,CACLqB,OAAO,CAACL,GAAG,EAAE;EACZM,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAMN,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CACpDM,KAAK,CAAEC,KAAK,IAAKR,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC","ignoreList":[]}},"mtime":1715306408030},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\BaiTapweb\\\\backend\\\\Routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\BaiTapweb\\\\backend\",\"filename\":\"D:\\\\BaiTapweb\\\\backend\\\\Routes\\\\userRoute.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\BaiTapweb\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const express = require(\"express\");\nconst router = express.Router();\nconst userController = require(\"../Controllers/userController\");\nrouter.post(\"/admin/register\", userController.registerUser);\nrouter.post(\"/admin/login\", userController.loginUser);\nrouter.get(\"/find/:userId\", userController.findUser);\nrouter.get(\"/\", userController.getUsers);\nrouter.post(\"/admin/logout\", userController.logoutUser);\nrouter.get(\"/users\", userController.getNumberPhotoComment);\nrouter.get(\"/users/:userId/comments\", userController.getAllCommentByUser);\nrouter.get(\"/users/:userId/countComment\", userController.getCountComment);\nrouter.get(\"/users/:userId/allComment\", userController.getAllCommentsByUser);\nrouter.get(\"/users/:photoId/details\", userController.getPhotoWithComments);\nrouter.get(\"/users/:userId\", userController.getUserById);\nrouter.post(\"/users/:userId\", userController.changeUser);\nrouter.post(\"/users/:userId/change-password\", userController.changePassword);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsInVzZXJDb250cm9sbGVyIiwicG9zdCIsInJlZ2lzdGVyVXNlciIsImxvZ2luVXNlciIsImdldCIsImZpbmRVc2VyIiwiZ2V0VXNlcnMiLCJsb2dvdXRVc2VyIiwiZ2V0TnVtYmVyUGhvdG9Db21tZW50IiwiZ2V0QWxsQ29tbWVudEJ5VXNlciIsImdldENvdW50Q29tbWVudCIsImdldEFsbENvbW1lbnRzQnlVc2VyIiwiZ2V0UGhvdG9XaXRoQ29tbWVudHMiLCJnZXRVc2VyQnlJZCIsImNoYW5nZVVzZXIiLCJjaGFuZ2VQYXNzd29yZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkQ6XFxCYWlUYXB3ZWJcXGJhY2tlbmRcXFJvdXRlc1xcIiwic291cmNlcyI6WyJ1c2VyUm91dGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5jb25zdCB1c2VyQ29udHJvbGxlciA9IHJlcXVpcmUoXCIuLi9Db250cm9sbGVycy91c2VyQ29udHJvbGxlclwiKTtcclxuXHJcbnJvdXRlci5wb3N0KFwiL2FkbWluL3JlZ2lzdGVyXCIsIHVzZXJDb250cm9sbGVyLnJlZ2lzdGVyVXNlcik7XHJcbnJvdXRlci5wb3N0KFwiL2FkbWluL2xvZ2luXCIsIHVzZXJDb250cm9sbGVyLmxvZ2luVXNlcik7XHJcbnJvdXRlci5nZXQoXCIvZmluZC86dXNlcklkXCIsIHVzZXJDb250cm9sbGVyLmZpbmRVc2VyKTtcclxucm91dGVyLmdldChcIi9cIiwgdXNlckNvbnRyb2xsZXIuZ2V0VXNlcnMpO1xyXG5yb3V0ZXIucG9zdChcIi9hZG1pbi9sb2dvdXRcIiwgdXNlckNvbnRyb2xsZXIubG9nb3V0VXNlcik7XHJcbnJvdXRlci5nZXQoXCIvdXNlcnNcIiwgdXNlckNvbnRyb2xsZXIuZ2V0TnVtYmVyUGhvdG9Db21tZW50KTtcclxucm91dGVyLmdldChcIi91c2Vycy86dXNlcklkL2NvbW1lbnRzXCIsIHVzZXJDb250cm9sbGVyLmdldEFsbENvbW1lbnRCeVVzZXIpO1xyXG5yb3V0ZXIuZ2V0KFwiL3VzZXJzLzp1c2VySWQvY291bnRDb21tZW50XCIsIHVzZXJDb250cm9sbGVyLmdldENvdW50Q29tbWVudCk7XHJcbnJvdXRlci5nZXQoXCIvdXNlcnMvOnVzZXJJZC9hbGxDb21tZW50XCIsIHVzZXJDb250cm9sbGVyLmdldEFsbENvbW1lbnRzQnlVc2VyKTtcclxucm91dGVyLmdldChcIi91c2Vycy86cGhvdG9JZC9kZXRhaWxzXCIsIHVzZXJDb250cm9sbGVyLmdldFBob3RvV2l0aENvbW1lbnRzKTtcclxucm91dGVyLmdldChcIi91c2Vycy86dXNlcklkXCIsIHVzZXJDb250cm9sbGVyLmdldFVzZXJCeUlkKTtcclxucm91dGVyLnBvc3QoXCIvdXNlcnMvOnVzZXJJZFwiLCB1c2VyQ29udHJvbGxlci5jaGFuZ2VVc2VyKTtcclxucm91dGVyLnBvc3QoXCIvdXNlcnMvOnVzZXJJZC9jaGFuZ2UtcGFzc3dvcmRcIiwgdXNlckNvbnRyb2xsZXIuY2hhbmdlUGFzc3dvcmQpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFNLENBQUMsQ0FBQztBQUMvQixNQUFNQyxjQUFjLEdBQUdILE9BQU8sQ0FBQywrQkFBK0IsQ0FBQztBQUUvREMsTUFBTSxDQUFDRyxJQUFJLENBQUMsaUJBQWlCLEVBQUVELGNBQWMsQ0FBQ0UsWUFBWSxDQUFDO0FBQzNESixNQUFNLENBQUNHLElBQUksQ0FBQyxjQUFjLEVBQUVELGNBQWMsQ0FBQ0csU0FBUyxDQUFDO0FBQ3JETCxNQUFNLENBQUNNLEdBQUcsQ0FBQyxlQUFlLEVBQUVKLGNBQWMsQ0FBQ0ssUUFBUSxDQUFDO0FBQ3BEUCxNQUFNLENBQUNNLEdBQUcsQ0FBQyxHQUFHLEVBQUVKLGNBQWMsQ0FBQ00sUUFBUSxDQUFDO0FBQ3hDUixNQUFNLENBQUNHLElBQUksQ0FBQyxlQUFlLEVBQUVELGNBQWMsQ0FBQ08sVUFBVSxDQUFDO0FBQ3ZEVCxNQUFNLENBQUNNLEdBQUcsQ0FBQyxRQUFRLEVBQUVKLGNBQWMsQ0FBQ1EscUJBQXFCLENBQUM7QUFDMURWLE1BQU0sQ0FBQ00sR0FBRyxDQUFDLHlCQUF5QixFQUFFSixjQUFjLENBQUNTLG1CQUFtQixDQUFDO0FBQ3pFWCxNQUFNLENBQUNNLEdBQUcsQ0FBQyw2QkFBNkIsRUFBRUosY0FBYyxDQUFDVSxlQUFlLENBQUM7QUFDekVaLE1BQU0sQ0FBQ00sR0FBRyxDQUFDLDJCQUEyQixFQUFFSixjQUFjLENBQUNXLG9CQUFvQixDQUFDO0FBQzVFYixNQUFNLENBQUNNLEdBQUcsQ0FBQyx5QkFBeUIsRUFBRUosY0FBYyxDQUFDWSxvQkFBb0IsQ0FBQztBQUMxRWQsTUFBTSxDQUFDTSxHQUFHLENBQUMsZ0JBQWdCLEVBQUVKLGNBQWMsQ0FBQ2EsV0FBVyxDQUFDO0FBQ3hEZixNQUFNLENBQUNHLElBQUksQ0FBQyxnQkFBZ0IsRUFBRUQsY0FBYyxDQUFDYyxVQUFVLENBQUM7QUFDeERoQixNQUFNLENBQUNHLElBQUksQ0FBQyxnQ0FBZ0MsRUFBRUQsY0FBYyxDQUFDZSxjQUFjLENBQUM7QUFFNUVDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHbkIsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["express","require","router","Router","userController","post","registerUser","loginUser","get","findUser","getUsers","logoutUser","getNumberPhotoComment","getAllCommentByUser","getCountComment","getAllCommentsByUser","getPhotoWithComments","getUserById","changeUser","changePassword","module","exports"],"sourceRoot":"D:\\BaiTapweb\\backend\\Routes\\","sources":["userRoute.js"],"sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\nconst userController = require(\"../Controllers/userController\");\r\n\r\nrouter.post(\"/admin/register\", userController.registerUser);\r\nrouter.post(\"/admin/login\", userController.loginUser);\r\nrouter.get(\"/find/:userId\", userController.findUser);\r\nrouter.get(\"/\", userController.getUsers);\r\nrouter.post(\"/admin/logout\", userController.logoutUser);\r\nrouter.get(\"/users\", userController.getNumberPhotoComment);\r\nrouter.get(\"/users/:userId/comments\", userController.getAllCommentByUser);\r\nrouter.get(\"/users/:userId/countComment\", userController.getCountComment);\r\nrouter.get(\"/users/:userId/allComment\", userController.getAllCommentsByUser);\r\nrouter.get(\"/users/:photoId/details\", userController.getPhotoWithComments);\r\nrouter.get(\"/users/:userId\", userController.getUserById);\r\nrouter.post(\"/users/:userId\", userController.changeUser);\r\nrouter.post(\"/users/:userId/change-password\", userController.changePassword);\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,cAAc,GAAGH,OAAO,CAAC,+BAA+B,CAAC;AAE/DC,MAAM,CAACG,IAAI,CAAC,iBAAiB,EAAED,cAAc,CAACE,YAAY,CAAC;AAC3DJ,MAAM,CAACG,IAAI,CAAC,cAAc,EAAED,cAAc,CAACG,SAAS,CAAC;AACrDL,MAAM,CAACM,GAAG,CAAC,eAAe,EAAEJ,cAAc,CAACK,QAAQ,CAAC;AACpDP,MAAM,CAACM,GAAG,CAAC,GAAG,EAAEJ,cAAc,CAACM,QAAQ,CAAC;AACxCR,MAAM,CAACG,IAAI,CAAC,eAAe,EAAED,cAAc,CAACO,UAAU,CAAC;AACvDT,MAAM,CAACM,GAAG,CAAC,QAAQ,EAAEJ,cAAc,CAACQ,qBAAqB,CAAC;AAC1DV,MAAM,CAACM,GAAG,CAAC,yBAAyB,EAAEJ,cAAc,CAACS,mBAAmB,CAAC;AACzEX,MAAM,CAACM,GAAG,CAAC,6BAA6B,EAAEJ,cAAc,CAACU,eAAe,CAAC;AACzEZ,MAAM,CAACM,GAAG,CAAC,2BAA2B,EAAEJ,cAAc,CAACW,oBAAoB,CAAC;AAC5Eb,MAAM,CAACM,GAAG,CAAC,yBAAyB,EAAEJ,cAAc,CAACY,oBAAoB,CAAC;AAC1Ed,MAAM,CAACM,GAAG,CAAC,gBAAgB,EAAEJ,cAAc,CAACa,WAAW,CAAC;AACxDf,MAAM,CAACG,IAAI,CAAC,gBAAgB,EAAED,cAAc,CAACc,UAAU,CAAC;AACxDhB,MAAM,CAACG,IAAI,CAAC,gCAAgC,EAAED,cAAc,CAACe,cAAc,CAAC;AAE5EC,MAAM,CAACC,OAAO,GAAGnB,MAAM","ignoreList":[]}},"mtime":1715783118067},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\BaiTapweb\\\\backend\\\\Controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\BaiTapweb\\\\backend\",\"filename\":\"D:\\\\BaiTapweb\\\\backend\\\\Controllers\\\\userController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\BaiTapweb\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const jwt = require(\"jsonwebtoken\");\nconst bcrypt = require(\"bcrypt\");\nconst validator = require(\"validator\");\nconst Photo = require(\"../db/photoModel\");\nconst userModel = require(\"../db/userModel\");\nconst commentModel = require(\"../db/commentModel\");\nconst createToken = _id => {\n  let jwtkey = process.env.JWT_SECRET_KEY;\n  return jwt.sign({\n    _id\n  }, jwtkey, {\n    expiresIn: \"3d\"\n  });\n};\nconst registerUser = async (req, res) => {\n  try {\n    let {\n      first_name,\n      last_name,\n      location,\n      description,\n      occupation,\n      email,\n      password\n    } = req.body;\n    let user = await userModel.findOne({\n      email\n    });\n    console.log(\"chjeck body\", req.body);\n    if (user) return res.status(200).json({\n      errCode: 1,\n      errMessage: \"User with the given email already exists\"\n    });\n    if (!first_name || !last_name || !email || !password) return res.status(400).json({\n      errCode: 1,\n      errMessage: \"All fields are required...\"\n    });\n    if (!validator.isEmail(email)) return res.status(200).json({\n      errCode: 1,\n      errMessage: \"Email must be a valid email\"\n    });\n    user = new userModel({\n      first_name,\n      last_name,\n      location,\n      description,\n      occupation,\n      email,\n      password\n    });\n    let salt = await bcrypt.genSalt(10);\n    user.password = await bcrypt.hash(user.password, salt);\n    await user.save();\n    let token = createToken(user._id);\n\n    // Set cookie with user information\n    res.cookie(\"userData\", JSON.stringify({\n      token\n    }), {\n      httpOnly: true\n    });\n    res.status(200).json({\n      _id: user._id,\n      first_name,\n      last_name,\n      email,\n      token,\n      errCode: 0\n    });\n  } catch (e) {\n    console.log(e);\n    res.status(500).json(e);\n  }\n};\nconst loginUser = async (req, res) => {\n  const {\n    email,\n    password\n  } = req.body;\n  try {\n    let user = await userModel.findOne({\n      email\n    });\n    if (!user) return res.status(400).json({\n      errCode: 1,\n      errMessage: \"Invalid Email or Password\"\n    });\n    const isValidPassword = await bcrypt.compare(password, user.password);\n    if (!isValidPassword) return res.status(200).json({\n      errCode: 1,\n      errMessage: \"Invalid password\"\n    });\n    let token = createToken(user._id);\n\n    // Set cookie with user information\n    res.cookie(\"userData\", JSON.stringify({\n      token\n    }), {\n      httpOnly: true\n    });\n    res.status(200).json({\n      _id: user._id,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      email,\n      location: user.location,\n      description: user.description,\n      occupation: user.occupation,\n      token,\n      errCode: 0\n    });\n  } catch (e) {\n    console.log(e);\n    res.status(500).json(e);\n  }\n};\nconst findUser = async (req, res) => {\n  const userId = req.params.userId;\n  try {\n    const user = await userModel.findById(userId);\n    if (!user) {\n      return res.status(404).json({\n        errCode: 1,\n        errMessage: \"User not found\"\n      });\n    }\n    res.status(200).json(user);\n  } catch (e) {\n    console.log(e);\n    res.status(500).json(e);\n  }\n};\nconst getUsers = async (req, res) => {\n  try {\n    const users = await userModel.find({}, \"_id first_name last_name\");\n    res.status(200).json({\n      users,\n      errCode: 0\n    });\n  } catch (e) {\n    console.log(e);\n    res.status(500).json({\n      errCode: 1,\n      errMessage: \"Missing required parameter\"\n    });\n  }\n};\nconst logoutUser = async (req, res) => {\n  try {\n    // Kiểm tra cookie để xác định người dùng đã đăng nhập hay chưa\n    // if (req.cookies.userData) {\n    //   // Xóa cookie để logout\n    //   res.clearCookie(\"userData\");\n    //   res.status(200).json({ success: true, message: \"Logout successful\" });\n    // } else {\n    //   res.status(400).json({ success: false, message: \"User not logged in\" });\n    // }\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({\n      success: false,\n      message: \"Server error\"\n    });\n  }\n};\nconst getNumberPhotoComment = async (req, res) => {\n  try {\n    // Find all users\n    const users = await userModel.find();\n\n    // Fetch photo count and comment count for each user\n    const usersWithCounts = await Promise.all(users.map(async user => {\n      const photoCount = await Photo.countDocuments({\n        user_id: user._id\n      });\n      const commentCount = await Photo.Comments.countDocuments({\n        user_id: user._id\n      });\n      return {\n        _id: user._id,\n        first_name: user.first_name,\n        last_name: user.last_name,\n        photoCount,\n        commentCount\n      };\n    }));\n    res.status(200).json(usersWithCounts);\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nconst getAllCommentByUser = async (req, res) => {\n  try {\n    const {\n      userId\n    } = req.params;\n\n    // Find all comments by the given user ID\n    const userComments = await Photo.Comments.find({\n      user_id: userId\n    }).populate(\"photo_id\");\n    res.status(200).json(userComments);\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nconst getCountComment = async (req, res) => {\n  try {\n    const {\n      userId\n    } = req.params;\n    const commentCount = await commentModel.countDocuments({\n      user_id: userId\n    });\n    res.status(200).json({\n      commentCount\n    });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nconst getAllCommentsByUser = async (req, res) => {\n  try {\n    const {\n      userId\n    } = req.params;\n    const userComments = await commentModel.find({\n      user_id: userId\n    });\n    const commentsWithPhotos = await Promise.all(userComments.map(async comment => {\n      const photo = await Photo.findOne({\n        comments: {\n          $in: [comment._id]\n        }\n      });\n      return {\n        _id: comment._id,\n        comment: comment.comment,\n        date_time: comment.date_time,\n        user_id: comment.user_id,\n        photo: photo || null\n      };\n    }));\n    res.status(200).json(commentsWithPhotos);\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nconst getPhotoWithComments = async (req, res) => {\n  try {\n    const {\n      photoId\n    } = req.params;\n\n    // Tìm thông tin về ảnh dựa trên photoId\n    const photo = await Photo.findById(photoId);\n    if (!photo) {\n      return res.status(404).json({\n        message: \"Photo not found\"\n      });\n    }\n\n    // Tìm tất cả các nhận xét của ảnh này\n    const comments = await commentModel.find({\n      _id: {\n        $in: photo.comments\n      }\n    });\n\n    // Lặp qua mỗi nhận xét để thêm thông tin về người dùng\n    for (let i = 0; i < comments.length; i++) {\n      const user = await userModel.findById(comments[i].user_id);\n      comments[i].user_id = user; // Thêm thông tin về người dùng vào nhận xét\n    }\n\n    // Trả về thông tin về ảnh cùng với tất cả các nhận xét\n    res.status(200).json({\n      photo,\n      comments\n    });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nconst getUserById = async (req, res) => {\n  try {\n    const {\n      userId\n    } = req.params;\n\n    // Tìm thông tin người dùng bằng userId\n    const user = await userModel.findById(userId);\n    if (!user) {\n      return res.status(404).json({\n        message: \"User not found\"\n      });\n    }\n\n    // Trả về thông tin người dùng\n    res.status(200).json(user);\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nconst changeUser = async (req, res) => {\n  const userId = req.params.userId;\n  const {\n    first_name,\n    last_name,\n    location,\n    description,\n    occupation\n  } = req.body;\n  try {\n    // Find the user by ID\n    const user = await userModel.findById(userId);\n    if (!user) {\n      return res.status(404).json({\n        error: \"User not found\"\n      });\n    }\n\n    // Update user information\n    user.first_name = first_name || user.first_name;\n    user.last_name = last_name || user.last_name;\n    user.location = location || user.location;\n    user.description = description || user.description;\n    user.occupation = occupation || user.occupation;\n\n    // Save the updated user\n    await user.save();\n    res.status(200).json({\n      message: \"User information updated successfully\"\n    });\n  } catch (error) {\n    console.error(\"Error updating user:\", error);\n    res.status(500).json({\n      error: \"Internal Server Error\"\n    });\n  }\n};\nconst changePassword = async (req, res) => {\n  const {\n    userId\n  } = req.params;\n  const {\n    oldPassword,\n    newPassword\n  } = req.body;\n  try {\n    // Find the user by ID\n    const user = await userModel.findById(userId);\n\n    // Check if the old password matches the current password\n    const isValidPassword = await bcrypt.compare(oldPassword, user.password);\n    if (!isValidPassword) {\n      return res.status(400).json({\n        message: \"Old password is incorrect\"\n      });\n    }\n\n    // Hash the new password\n    const salt = await bcrypt.genSalt(10);\n    const hashedPassword = await bcrypt.hash(newPassword, salt);\n\n    // Update the user's password\n    user.password = hashedPassword;\n\n    // Save the updated user\n    await user.save();\n    res.status(200).json({\n      message: \"Password updated successfully\"\n    });\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nmodule.exports = {\n  registerUser,\n  createToken,\n  loginUser,\n  findUser,\n  getUsers,\n  logoutUser,\n  getNumberPhotoComment,\n  getAllCommentByUser,\n  getCountComment,\n  getAllCommentsByUser,\n  getPhotoWithComments,\n  getUserById,\n  changeUser,\n  changePassword\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiYmNyeXB0IiwidmFsaWRhdG9yIiwiUGhvdG8iLCJ1c2VyTW9kZWwiLCJjb21tZW50TW9kZWwiLCJjcmVhdGVUb2tlbiIsIl9pZCIsImp3dGtleSIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUX0tFWSIsInNpZ24iLCJleHBpcmVzSW4iLCJyZWdpc3RlclVzZXIiLCJyZXEiLCJyZXMiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwibG9jYXRpb24iLCJkZXNjcmlwdGlvbiIsIm9jY3VwYXRpb24iLCJlbWFpbCIsInBhc3N3b3JkIiwiYm9keSIsInVzZXIiLCJmaW5kT25lIiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsImpzb24iLCJlcnJDb2RlIiwiZXJyTWVzc2FnZSIsImlzRW1haWwiLCJzYWx0IiwiZ2VuU2FsdCIsImhhc2giLCJzYXZlIiwidG9rZW4iLCJjb29raWUiLCJKU09OIiwic3RyaW5naWZ5IiwiaHR0cE9ubHkiLCJlIiwibG9naW5Vc2VyIiwiaXNWYWxpZFBhc3N3b3JkIiwiY29tcGFyZSIsImZpbmRVc2VyIiwidXNlcklkIiwicGFyYW1zIiwiZmluZEJ5SWQiLCJnZXRVc2VycyIsInVzZXJzIiwiZmluZCIsImxvZ291dFVzZXIiLCJlcnJvciIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwiZ2V0TnVtYmVyUGhvdG9Db21tZW50IiwidXNlcnNXaXRoQ291bnRzIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsInBob3RvQ291bnQiLCJjb3VudERvY3VtZW50cyIsInVzZXJfaWQiLCJjb21tZW50Q291bnQiLCJDb21tZW50cyIsImVyciIsImdldEFsbENvbW1lbnRCeVVzZXIiLCJ1c2VyQ29tbWVudHMiLCJwb3B1bGF0ZSIsImdldENvdW50Q29tbWVudCIsImdldEFsbENvbW1lbnRzQnlVc2VyIiwiY29tbWVudHNXaXRoUGhvdG9zIiwiY29tbWVudCIsInBob3RvIiwiY29tbWVudHMiLCIkaW4iLCJkYXRlX3RpbWUiLCJnZXRQaG90b1dpdGhDb21tZW50cyIsInBob3RvSWQiLCJpIiwibGVuZ3RoIiwiZ2V0VXNlckJ5SWQiLCJjaGFuZ2VVc2VyIiwiY2hhbmdlUGFzc3dvcmQiLCJvbGRQYXNzd29yZCIsIm5ld1Bhc3N3b3JkIiwiaGFzaGVkUGFzc3dvcmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJEOlxcQmFpVGFwd2ViXFxiYWNrZW5kXFxDb250cm9sbGVyc1xcIiwic291cmNlcyI6WyJ1c2VyQ29udHJvbGxlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBqd3QgPSByZXF1aXJlKFwianNvbndlYnRva2VuXCIpO1xyXG5jb25zdCBiY3J5cHQgPSByZXF1aXJlKFwiYmNyeXB0XCIpO1xyXG5jb25zdCB2YWxpZGF0b3IgPSByZXF1aXJlKFwidmFsaWRhdG9yXCIpO1xyXG5jb25zdCBQaG90byA9IHJlcXVpcmUoXCIuLi9kYi9waG90b01vZGVsXCIpO1xyXG5jb25zdCB1c2VyTW9kZWwgPSByZXF1aXJlKFwiLi4vZGIvdXNlck1vZGVsXCIpO1xyXG5jb25zdCBjb21tZW50TW9kZWwgPSByZXF1aXJlKFwiLi4vZGIvY29tbWVudE1vZGVsXCIpO1xyXG5jb25zdCBjcmVhdGVUb2tlbiA9IChfaWQpID0+IHtcclxuICBsZXQgand0a2V5ID0gcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVF9LRVk7XHJcbiAgcmV0dXJuIGp3dC5zaWduKHsgX2lkIH0sIGp3dGtleSwgeyBleHBpcmVzSW46IFwiM2RcIiB9KTtcclxufTtcclxuXHJcbmNvbnN0IHJlZ2lzdGVyVXNlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBsZXQge1xyXG4gICAgICBmaXJzdF9uYW1lLFxyXG4gICAgICBsYXN0X25hbWUsXHJcbiAgICAgIGxvY2F0aW9uLFxyXG4gICAgICBkZXNjcmlwdGlvbixcclxuICAgICAgb2NjdXBhdGlvbixcclxuICAgICAgZW1haWwsXHJcbiAgICAgIHBhc3N3b3JkLFxyXG4gICAgfSA9IHJlcS5ib2R5O1xyXG4gICAgbGV0IHVzZXIgPSBhd2FpdCB1c2VyTW9kZWwuZmluZE9uZSh7IGVtYWlsIH0pO1xyXG4gICAgY29uc29sZS5sb2coXCJjaGplY2sgYm9keVwiLCByZXEuYm9keSk7XHJcbiAgICBpZiAodXNlcilcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICBlcnJDb2RlOiAxLFxyXG4gICAgICAgIGVyck1lc3NhZ2U6IFwiVXNlciB3aXRoIHRoZSBnaXZlbiBlbWFpbCBhbHJlYWR5IGV4aXN0c1wiLFxyXG4gICAgICB9KTtcclxuICAgIGlmICghZmlyc3RfbmFtZSB8fCAhbGFzdF9uYW1lIHx8ICFlbWFpbCB8fCAhcGFzc3dvcmQpXHJcbiAgICAgIHJldHVybiByZXNcclxuICAgICAgICAuc3RhdHVzKDQwMClcclxuICAgICAgICAuanNvbih7IGVyckNvZGU6IDEsIGVyck1lc3NhZ2U6IFwiQWxsIGZpZWxkcyBhcmUgcmVxdWlyZWQuLi5cIiB9KTtcclxuXHJcbiAgICBpZiAoIXZhbGlkYXRvci5pc0VtYWlsKGVtYWlsKSlcclxuICAgICAgcmV0dXJuIHJlc1xyXG4gICAgICAgIC5zdGF0dXMoMjAwKVxyXG4gICAgICAgIC5qc29uKHsgZXJyQ29kZTogMSwgZXJyTWVzc2FnZTogXCJFbWFpbCBtdXN0IGJlIGEgdmFsaWQgZW1haWxcIiB9KTtcclxuXHJcbiAgICB1c2VyID0gbmV3IHVzZXJNb2RlbCh7XHJcbiAgICAgIGZpcnN0X25hbWUsXHJcbiAgICAgIGxhc3RfbmFtZSxcclxuICAgICAgbG9jYXRpb24sXHJcbiAgICAgIGRlc2NyaXB0aW9uLFxyXG4gICAgICBvY2N1cGF0aW9uLFxyXG4gICAgICBlbWFpbCxcclxuICAgICAgcGFzc3dvcmQsXHJcbiAgICB9KTtcclxuXHJcbiAgICBsZXQgc2FsdCA9IGF3YWl0IGJjcnlwdC5nZW5TYWx0KDEwKTtcclxuICAgIHVzZXIucGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaCh1c2VyLnBhc3N3b3JkLCBzYWx0KTtcclxuXHJcbiAgICBhd2FpdCB1c2VyLnNhdmUoKTtcclxuXHJcbiAgICBsZXQgdG9rZW4gPSBjcmVhdGVUb2tlbih1c2VyLl9pZCk7XHJcblxyXG4gICAgLy8gU2V0IGNvb2tpZSB3aXRoIHVzZXIgaW5mb3JtYXRpb25cclxuICAgIHJlcy5jb29raWUoXCJ1c2VyRGF0YVwiLCBKU09OLnN0cmluZ2lmeSh7IHRva2VuIH0pLCB7IGh0dHBPbmx5OiB0cnVlIH0pO1xyXG5cclxuICAgIHJlc1xyXG4gICAgICAuc3RhdHVzKDIwMClcclxuICAgICAgLmpzb24oeyBfaWQ6IHVzZXIuX2lkLCBmaXJzdF9uYW1lLCBsYXN0X25hbWUsIGVtYWlsLCB0b2tlbiwgZXJyQ29kZTogMCB9KTtcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICBjb25zb2xlLmxvZyhlKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKGUpO1xyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IGxvZ2luVXNlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSByZXEuYm9keTtcclxuICB0cnkge1xyXG4gICAgbGV0IHVzZXIgPSBhd2FpdCB1c2VyTW9kZWwuZmluZE9uZSh7IGVtYWlsIH0pO1xyXG4gICAgaWYgKCF1c2VyKVxyXG4gICAgICByZXR1cm4gcmVzXHJcbiAgICAgICAgLnN0YXR1cyg0MDApXHJcbiAgICAgICAgLmpzb24oeyBlcnJDb2RlOiAxLCBlcnJNZXNzYWdlOiBcIkludmFsaWQgRW1haWwgb3IgUGFzc3dvcmRcIiB9KTtcclxuXHJcbiAgICBjb25zdCBpc1ZhbGlkUGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgdXNlci5wYXNzd29yZCk7XHJcblxyXG4gICAgaWYgKCFpc1ZhbGlkUGFzc3dvcmQpXHJcbiAgICAgIHJldHVybiByZXNcclxuICAgICAgICAuc3RhdHVzKDIwMClcclxuICAgICAgICAuanNvbih7IGVyckNvZGU6IDEsIGVyck1lc3NhZ2U6IFwiSW52YWxpZCBwYXNzd29yZFwiIH0pO1xyXG5cclxuICAgIGxldCB0b2tlbiA9IGNyZWF0ZVRva2VuKHVzZXIuX2lkKTtcclxuXHJcbiAgICAvLyBTZXQgY29va2llIHdpdGggdXNlciBpbmZvcm1hdGlvblxyXG4gICAgcmVzLmNvb2tpZShcclxuICAgICAgXCJ1c2VyRGF0YVwiLFxyXG4gICAgICBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgdG9rZW4sXHJcbiAgICAgIH0pLFxyXG4gICAgICB7IGh0dHBPbmx5OiB0cnVlIH1cclxuICAgICk7XHJcblxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICBfaWQ6IHVzZXIuX2lkLFxyXG4gICAgICBmaXJzdF9uYW1lOiB1c2VyLmZpcnN0X25hbWUsXHJcbiAgICAgIGxhc3RfbmFtZTogdXNlci5sYXN0X25hbWUsXHJcbiAgICAgIGVtYWlsLFxyXG4gICAgICBsb2NhdGlvbjogdXNlci5sb2NhdGlvbixcclxuICAgICAgZGVzY3JpcHRpb246IHVzZXIuZGVzY3JpcHRpb24sXHJcbiAgICAgIG9jY3VwYXRpb246IHVzZXIub2NjdXBhdGlvbixcclxuICAgICAgdG9rZW4sXHJcbiAgICAgIGVyckNvZGU6IDAsXHJcbiAgICB9KTtcclxuICB9IGNhdGNoIChlKSB7XHJcbiAgICBjb25zb2xlLmxvZyhlKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKGUpO1xyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IGZpbmRVc2VyID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgdXNlcklkID0gcmVxLnBhcmFtcy51c2VySWQ7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB1c2VyTW9kZWwuZmluZEJ5SWQodXNlcklkKTtcclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xyXG4gICAgICAgIGVyckNvZGU6IDEsXHJcbiAgICAgICAgZXJyTWVzc2FnZTogXCJVc2VyIG5vdCBmb3VuZFwiLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHVzZXIpO1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIGNvbnNvbGUubG9nKGUpO1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oZSk7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgZ2V0VXNlcnMgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlcnMgPSBhd2FpdCB1c2VyTW9kZWwuZmluZCh7fSwgXCJfaWQgZmlyc3RfbmFtZSBsYXN0X25hbWVcIik7XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgIHVzZXJzLFxyXG4gICAgICBlcnJDb2RlOiAwLFxyXG4gICAgfSk7XHJcbiAgfSBjYXRjaCAoZSkge1xyXG4gICAgY29uc29sZS5sb2coZSk7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgIGVyckNvZGU6IDEsXHJcbiAgICAgIGVyck1lc3NhZ2U6IFwiTWlzc2luZyByZXF1aXJlZCBwYXJhbWV0ZXJcIixcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IGxvZ291dFVzZXIgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgLy8gS2nhu4NtIHRyYSBjb29raWUgxJHhu4MgeMOhYyDEkeG7i25oIG5nxrDhu51pIGTDuW5nIMSRw6MgxJHEg25nIG5o4bqtcCBoYXkgY2jGsGFcclxuICAgIC8vIGlmIChyZXEuY29va2llcy51c2VyRGF0YSkge1xyXG4gICAgLy8gICAvLyBYw7NhIGNvb2tpZSDEkeG7gyBsb2dvdXRcclxuICAgIC8vICAgcmVzLmNsZWFyQ29va2llKFwidXNlckRhdGFcIik7XHJcbiAgICAvLyAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgc3VjY2VzczogdHJ1ZSwgbWVzc2FnZTogXCJMb2dvdXQgc3VjY2Vzc2Z1bFwiIH0pO1xyXG4gICAgLy8gfSBlbHNlIHtcclxuICAgIC8vICAgcmVzLnN0YXR1cyg0MDApLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogXCJVc2VyIG5vdCBsb2dnZWQgaW5cIiB9KTtcclxuICAgIC8vIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBcIlNlcnZlciBlcnJvclwiIH0pO1xyXG4gIH1cclxufTtcclxuY29uc3QgZ2V0TnVtYmVyUGhvdG9Db21tZW50ID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIEZpbmQgYWxsIHVzZXJzXHJcbiAgICBjb25zdCB1c2VycyA9IGF3YWl0IHVzZXJNb2RlbC5maW5kKCk7XHJcblxyXG4gICAgLy8gRmV0Y2ggcGhvdG8gY291bnQgYW5kIGNvbW1lbnQgY291bnQgZm9yIGVhY2ggdXNlclxyXG4gICAgY29uc3QgdXNlcnNXaXRoQ291bnRzID0gYXdhaXQgUHJvbWlzZS5hbGwoXHJcbiAgICAgIHVzZXJzLm1hcChhc3luYyAodXNlcikgPT4ge1xyXG4gICAgICAgIGNvbnN0IHBob3RvQ291bnQgPSBhd2FpdCBQaG90by5jb3VudERvY3VtZW50cyh7IHVzZXJfaWQ6IHVzZXIuX2lkIH0pO1xyXG4gICAgICAgIGNvbnN0IGNvbW1lbnRDb3VudCA9IGF3YWl0IFBob3RvLkNvbW1lbnRzLmNvdW50RG9jdW1lbnRzKHtcclxuICAgICAgICAgIHVzZXJfaWQ6IHVzZXIuX2lkLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICBfaWQ6IHVzZXIuX2lkLFxyXG4gICAgICAgICAgZmlyc3RfbmFtZTogdXNlci5maXJzdF9uYW1lLFxyXG4gICAgICAgICAgbGFzdF9uYW1lOiB1c2VyLmxhc3RfbmFtZSxcclxuICAgICAgICAgIHBob3RvQ291bnQsXHJcbiAgICAgICAgICBjb21tZW50Q291bnQsXHJcbiAgICAgICAgfTtcclxuICAgICAgfSlcclxuICAgICk7XHJcblxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24odXNlcnNXaXRoQ291bnRzKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogXCJJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcIiB9KTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBnZXRBbGxDb21tZW50QnlVc2VyID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgdXNlcklkIH0gPSByZXEucGFyYW1zO1xyXG5cclxuICAgIC8vIEZpbmQgYWxsIGNvbW1lbnRzIGJ5IHRoZSBnaXZlbiB1c2VyIElEXHJcbiAgICBjb25zdCB1c2VyQ29tbWVudHMgPSBhd2FpdCBQaG90by5Db21tZW50cy5maW5kKHtcclxuICAgICAgdXNlcl9pZDogdXNlcklkLFxyXG4gICAgfSkucG9wdWxhdGUoXCJwaG90b19pZFwiKTtcclxuXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih1c2VyQ29tbWVudHMpO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBcIkludGVybmFsIHNlcnZlciBlcnJvclwiIH0pO1xyXG4gIH1cclxufTtcclxuY29uc3QgZ2V0Q291bnRDb21tZW50ID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgdXNlcklkIH0gPSByZXEucGFyYW1zO1xyXG5cclxuICAgIGNvbnN0IGNvbW1lbnRDb3VudCA9IGF3YWl0IGNvbW1lbnRNb2RlbC5jb3VudERvY3VtZW50cyh7IHVzZXJfaWQ6IHVzZXJJZCB9KTtcclxuXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IGNvbW1lbnRDb3VudCB9KTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogXCJJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcIiB9KTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBnZXRBbGxDb21tZW50c0J5VXNlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IHVzZXJJZCB9ID0gcmVxLnBhcmFtcztcclxuXHJcbiAgICBjb25zdCB1c2VyQ29tbWVudHMgPSBhd2FpdCBjb21tZW50TW9kZWwuZmluZCh7IHVzZXJfaWQ6IHVzZXJJZCB9KTtcclxuXHJcbiAgICBjb25zdCBjb21tZW50c1dpdGhQaG90b3MgPSBhd2FpdCBQcm9taXNlLmFsbChcclxuICAgICAgdXNlckNvbW1lbnRzLm1hcChhc3luYyAoY29tbWVudCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHBob3RvID0gYXdhaXQgUGhvdG8uZmluZE9uZSh7XHJcbiAgICAgICAgICBjb21tZW50czogeyAkaW46IFtjb21tZW50Ll9pZF0gfSxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgX2lkOiBjb21tZW50Ll9pZCxcclxuICAgICAgICAgIGNvbW1lbnQ6IGNvbW1lbnQuY29tbWVudCxcclxuICAgICAgICAgIGRhdGVfdGltZTogY29tbWVudC5kYXRlX3RpbWUsXHJcbiAgICAgICAgICB1c2VyX2lkOiBjb21tZW50LnVzZXJfaWQsXHJcbiAgICAgICAgICBwaG90bzogcGhvdG8gfHwgbnVsbCxcclxuICAgICAgICB9O1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihjb21tZW50c1dpdGhQaG90b3MpO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBcIkludGVybmFsIHNlcnZlciBlcnJvclwiIH0pO1xyXG4gIH1cclxufTtcclxuY29uc3QgZ2V0UGhvdG9XaXRoQ29tbWVudHMgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBwaG90b0lkIH0gPSByZXEucGFyYW1zO1xyXG5cclxuICAgIC8vIFTDrG0gdGjDtG5nIHRpbiB24buBIOG6o25oIGThu7FhIHRyw6puIHBob3RvSWRcclxuICAgIGNvbnN0IHBob3RvID0gYXdhaXQgUGhvdG8uZmluZEJ5SWQocGhvdG9JZCk7XHJcblxyXG4gICAgaWYgKCFwaG90bykge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtZXNzYWdlOiBcIlBob3RvIG5vdCBmb3VuZFwiIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFTDrG0gdOG6pXQgY+G6oyBjw6FjIG5o4bqtbiB4w6l0IGPhu6dhIOG6o25oIG7DoHlcclxuICAgIGNvbnN0IGNvbW1lbnRzID0gYXdhaXQgY29tbWVudE1vZGVsLmZpbmQoeyBfaWQ6IHsgJGluOiBwaG90by5jb21tZW50cyB9IH0pO1xyXG5cclxuICAgIC8vIEzhurdwIHF1YSBt4buXaSBuaOG6rW4geMOpdCDEkeG7gyB0aMOqbSB0aMO0bmcgdGluIHbhu4EgbmfGsOG7nWkgZMO5bmdcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29tbWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHVzZXJNb2RlbC5maW5kQnlJZChjb21tZW50c1tpXS51c2VyX2lkKTtcclxuICAgICAgY29tbWVudHNbaV0udXNlcl9pZCA9IHVzZXI7IC8vIFRow6ptIHRow7RuZyB0aW4gduG7gSBuZ8aw4budaSBkw7luZyB2w6BvIG5o4bqtbiB4w6l0XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVHLhuqMgduG7gSB0aMO0bmcgdGluIHbhu4Eg4bqjbmggY8O5bmcgduG7m2kgdOG6pXQgY+G6oyBjw6FjIG5o4bqtbiB4w6l0XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IHBob3RvLCBjb21tZW50cyB9KTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogXCJJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcIiB9KTtcclxuICB9XHJcbn07XHJcbmNvbnN0IGdldFVzZXJCeUlkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgdXNlcklkIH0gPSByZXEucGFyYW1zO1xyXG5cclxuICAgIC8vIFTDrG0gdGjDtG5nIHRpbiBuZ8aw4budaSBkw7luZyBi4bqxbmcgdXNlcklkXHJcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgdXNlck1vZGVsLmZpbmRCeUlkKHVzZXJJZCk7XHJcblxyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IG1lc3NhZ2U6IFwiVXNlciBub3QgZm91bmRcIiB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBUcuG6oyB24buBIHRow7RuZyB0aW4gbmfGsOG7nWkgZMO5bmdcclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHVzZXIpO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBcIkludGVybmFsIHNlcnZlciBlcnJvclwiIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IGNoYW5nZVVzZXIgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB1c2VySWQgPSByZXEucGFyYW1zLnVzZXJJZDtcclxuICBjb25zdCB7IGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgbG9jYXRpb24sIGRlc2NyaXB0aW9uLCBvY2N1cGF0aW9uIH0gPSByZXEuYm9keTtcclxuXHJcbiAgdHJ5IHtcclxuICAgIC8vIEZpbmQgdGhlIHVzZXIgYnkgSURcclxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB1c2VyTW9kZWwuZmluZEJ5SWQodXNlcklkKTtcclxuXHJcbiAgICBpZiAoIXVzZXIpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6IFwiVXNlciBub3QgZm91bmRcIiB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBVcGRhdGUgdXNlciBpbmZvcm1hdGlvblxyXG4gICAgdXNlci5maXJzdF9uYW1lID0gZmlyc3RfbmFtZSB8fCB1c2VyLmZpcnN0X25hbWU7XHJcbiAgICB1c2VyLmxhc3RfbmFtZSA9IGxhc3RfbmFtZSB8fCB1c2VyLmxhc3RfbmFtZTtcclxuICAgIHVzZXIubG9jYXRpb24gPSBsb2NhdGlvbiB8fCB1c2VyLmxvY2F0aW9uO1xyXG4gICAgdXNlci5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uIHx8IHVzZXIuZGVzY3JpcHRpb247XHJcbiAgICB1c2VyLm9jY3VwYXRpb24gPSBvY2N1cGF0aW9uIHx8IHVzZXIub2NjdXBhdGlvbjtcclxuXHJcbiAgICAvLyBTYXZlIHRoZSB1cGRhdGVkIHVzZXJcclxuICAgIGF3YWl0IHVzZXIuc2F2ZSgpO1xyXG5cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbWVzc2FnZTogXCJVc2VyIGluZm9ybWF0aW9uIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5XCIgfSk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB1cGRhdGluZyB1c2VyOlwiLCBlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBcIkludGVybmFsIFNlcnZlciBFcnJvclwiIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IGNoYW5nZVBhc3N3b3JkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgeyB1c2VySWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgY29uc3QgeyBvbGRQYXNzd29yZCwgbmV3UGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xyXG5cclxuICB0cnkge1xyXG4gICAgLy8gRmluZCB0aGUgdXNlciBieSBJRFxyXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHVzZXJNb2RlbC5maW5kQnlJZCh1c2VySWQpO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIHRoZSBvbGQgcGFzc3dvcmQgbWF0Y2hlcyB0aGUgY3VycmVudCBwYXNzd29yZFxyXG4gICAgY29uc3QgaXNWYWxpZFBhc3N3b3JkID0gYXdhaXQgYmNyeXB0LmNvbXBhcmUob2xkUGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpO1xyXG5cclxuICAgIGlmICghaXNWYWxpZFBhc3N3b3JkKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6IFwiT2xkIHBhc3N3b3JkIGlzIGluY29ycmVjdFwiIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEhhc2ggdGhlIG5ldyBwYXNzd29yZFxyXG4gICAgY29uc3Qgc2FsdCA9IGF3YWl0IGJjcnlwdC5nZW5TYWx0KDEwKTtcclxuICAgIGNvbnN0IGhhc2hlZFBhc3N3b3JkID0gYXdhaXQgYmNyeXB0Lmhhc2gobmV3UGFzc3dvcmQsIHNhbHQpO1xyXG5cclxuICAgIC8vIFVwZGF0ZSB0aGUgdXNlcidzIHBhc3N3b3JkXHJcbiAgICB1c2VyLnBhc3N3b3JkID0gaGFzaGVkUGFzc3dvcmQ7XHJcblxyXG4gICAgLy8gU2F2ZSB0aGUgdXBkYXRlZCB1c2VyXHJcbiAgICBhd2FpdCB1c2VyLnNhdmUoKTtcclxuXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6IFwiUGFzc3dvcmQgdXBkYXRlZCBzdWNjZXNzZnVsbHlcIiB9KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIgfSk7XHJcbiAgfVxyXG59O1xyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICByZWdpc3RlclVzZXIsXHJcbiAgY3JlYXRlVG9rZW4sXHJcbiAgbG9naW5Vc2VyLFxyXG4gIGZpbmRVc2VyLFxyXG4gIGdldFVzZXJzLFxyXG4gIGxvZ291dFVzZXIsXHJcbiAgZ2V0TnVtYmVyUGhvdG9Db21tZW50LFxyXG4gIGdldEFsbENvbW1lbnRCeVVzZXIsXHJcbiAgZ2V0Q291bnRDb21tZW50LFxyXG4gIGdldEFsbENvbW1lbnRzQnlVc2VyLFxyXG4gIGdldFBob3RvV2l0aENvbW1lbnRzLFxyXG4gIGdldFVzZXJCeUlkLFxyXG4gIGNoYW5nZVVzZXIsXHJcbiAgY2hhbmdlUGFzc3dvcmRcclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDbkMsTUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQ2hDLE1BQU1FLFNBQVMsR0FBR0YsT0FBTyxDQUFDLFdBQVcsQ0FBQztBQUN0QyxNQUFNRyxLQUFLLEdBQUdILE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQztBQUN6QyxNQUFNSSxTQUFTLEdBQUdKLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztBQUM1QyxNQUFNSyxZQUFZLEdBQUdMLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztBQUNsRCxNQUFNTSxXQUFXLEdBQUlDLEdBQUcsSUFBSztFQUMzQixJQUFJQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxjQUFjO0VBQ3ZDLE9BQU9aLEdBQUcsQ0FBQ2EsSUFBSSxDQUFDO0lBQUVMO0VBQUksQ0FBQyxFQUFFQyxNQUFNLEVBQUU7SUFBRUssU0FBUyxFQUFFO0VBQUssQ0FBQyxDQUFDO0FBQ3ZELENBQUM7QUFFRCxNQUFNQyxZ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","map":{"version":3,"names":["jwt","require","bcrypt","validator","Photo","userModel","commentModel","createToken","_id","jwtkey","process","env","JWT_SECRET_KEY","sign","expiresIn","registerUser","req","res","first_name","last_name","location","description","occupation","email","password","body","user","findOne","console","log","status","json","errCode","errMessage","isEmail","salt","genSalt","hash","save","token","cookie","JSON","stringify","httpOnly","e","loginUser","isValidPassword","compare","findUser","userId","params","findById","getUsers","users","find","logoutUser","error","success","message","getNumberPhotoComment","usersWithCounts","Promise","all","map","photoCount","countDocuments","user_id","commentCount","Comments","err","getAllCommentByUser","userComments","populate","getCountComment","getAllCommentsByUser","commentsWithPhotos","comment","photo","comments","$in","date_time","getPhotoWithComments","photoId","i","length","getUserById","changeUser","changePassword","oldPassword","newPassword","hashedPassword","module","exports"],"sourceRoot":"D:\\BaiTapweb\\backend\\Controllers\\","sources":["userController.js"],"sourcesContent":["const jwt = require(\"jsonwebtoken\");\r\nconst bcrypt = require(\"bcrypt\");\r\nconst validator = require(\"validator\");\r\nconst Photo = require(\"../db/photoModel\");\r\nconst userModel = require(\"../db/userModel\");\r\nconst commentModel = require(\"../db/commentModel\");\r\nconst createToken = (_id) => {\r\n  let jwtkey = process.env.JWT_SECRET_KEY;\r\n  return jwt.sign({ _id }, jwtkey, { expiresIn: \"3d\" });\r\n};\r\n\r\nconst registerUser = async (req, res) => {\r\n  try {\r\n    let {\r\n      first_name,\r\n      last_name,\r\n      location,\r\n      description,\r\n      occupation,\r\n      email,\r\n      password,\r\n    } = req.body;\r\n    let user = await userModel.findOne({ email });\r\n    console.log(\"chjeck body\", req.body);\r\n    if (user)\r\n      return res.status(200).json({\r\n        errCode: 1,\r\n        errMessage: \"User with the given email already exists\",\r\n      });\r\n    if (!first_name || !last_name || !email || !password)\r\n      return res\r\n        .status(400)\r\n        .json({ errCode: 1, errMessage: \"All fields are required...\" });\r\n\r\n    if (!validator.isEmail(email))\r\n      return res\r\n        .status(200)\r\n        .json({ errCode: 1, errMessage: \"Email must be a valid email\" });\r\n\r\n    user = new userModel({\r\n      first_name,\r\n      last_name,\r\n      location,\r\n      description,\r\n      occupation,\r\n      email,\r\n      password,\r\n    });\r\n\r\n    let salt = await bcrypt.genSalt(10);\r\n    user.password = await bcrypt.hash(user.password, salt);\r\n\r\n    await user.save();\r\n\r\n    let token = createToken(user._id);\r\n\r\n    // Set cookie with user information\r\n    res.cookie(\"userData\", JSON.stringify({ token }), { httpOnly: true });\r\n\r\n    res\r\n      .status(200)\r\n      .json({ _id: user._id, first_name, last_name, email, token, errCode: 0 });\r\n  } catch (e) {\r\n    console.log(e);\r\n    res.status(500).json(e);\r\n  }\r\n};\r\n\r\nconst loginUser = async (req, res) => {\r\n  const { email, password } = req.body;\r\n  try {\r\n    let user = await userModel.findOne({ email });\r\n    if (!user)\r\n      return res\r\n        .status(400)\r\n        .json({ errCode: 1, errMessage: \"Invalid Email or Password\" });\r\n\r\n    const isValidPassword = await bcrypt.compare(password, user.password);\r\n\r\n    if (!isValidPassword)\r\n      return res\r\n        .status(200)\r\n        .json({ errCode: 1, errMessage: \"Invalid password\" });\r\n\r\n    let token = createToken(user._id);\r\n\r\n    // Set cookie with user information\r\n    res.cookie(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        token,\r\n      }),\r\n      { httpOnly: true }\r\n    );\r\n\r\n    res.status(200).json({\r\n      _id: user._id,\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      email,\r\n      location: user.location,\r\n      description: user.description,\r\n      occupation: user.occupation,\r\n      token,\r\n      errCode: 0,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    res.status(500).json(e);\r\n  }\r\n};\r\n\r\nconst findUser = async (req, res) => {\r\n  const userId = req.params.userId;\r\n  try {\r\n    const user = await userModel.findById(userId);\r\n    if (!user) {\r\n      return res.status(404).json({\r\n        errCode: 1,\r\n        errMessage: \"User not found\",\r\n      });\r\n    }\r\n    res.status(200).json(user);\r\n  } catch (e) {\r\n    console.log(e);\r\n    res.status(500).json(e);\r\n  }\r\n};\r\n\r\nconst getUsers = async (req, res) => {\r\n  try {\r\n    const users = await userModel.find({}, \"_id first_name last_name\");\r\n    res.status(200).json({\r\n      users,\r\n      errCode: 0,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    res.status(500).json({\r\n      errCode: 1,\r\n      errMessage: \"Missing required parameter\",\r\n    });\r\n  }\r\n};\r\n\r\nconst logoutUser = async (req, res) => {\r\n  try {\r\n    // Kiểm tra cookie để xác định người dùng đã đăng nhập hay chưa\r\n    // if (req.cookies.userData) {\r\n    //   // Xóa cookie để logout\r\n    //   res.clearCookie(\"userData\");\r\n    //   res.status(200).json({ success: true, message: \"Logout successful\" });\r\n    // } else {\r\n    //   res.status(400).json({ success: false, message: \"User not logged in\" });\r\n    // }\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ success: false, message: \"Server error\" });\r\n  }\r\n};\r\nconst getNumberPhotoComment = async (req, res) => {\r\n  try {\r\n    // Find all users\r\n    const users = await userModel.find();\r\n\r\n    // Fetch photo count and comment count for each user\r\n    const usersWithCounts = await Promise.all(\r\n      users.map(async (user) => {\r\n        const photoCount = await Photo.countDocuments({ user_id: user._id });\r\n        const commentCount = await Photo.Comments.countDocuments({\r\n          user_id: user._id,\r\n        });\r\n        return {\r\n          _id: user._id,\r\n          first_name: user.first_name,\r\n          last_name: user.last_name,\r\n          photoCount,\r\n          commentCount,\r\n        };\r\n      })\r\n    );\r\n\r\n    res.status(200).json(usersWithCounts);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nconst getAllCommentByUser = async (req, res) => {\r\n  try {\r\n    const { userId } = req.params;\r\n\r\n    // Find all comments by the given user ID\r\n    const userComments = await Photo.Comments.find({\r\n      user_id: userId,\r\n    }).populate(\"photo_id\");\r\n\r\n    res.status(200).json(userComments);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\nconst getCountComment = async (req, res) => {\r\n  try {\r\n    const { userId } = req.params;\r\n\r\n    const commentCount = await commentModel.countDocuments({ user_id: userId });\r\n\r\n    res.status(200).json({ commentCount });\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nconst getAllCommentsByUser = async (req, res) => {\r\n  try {\r\n    const { userId } = req.params;\r\n\r\n    const userComments = await commentModel.find({ user_id: userId });\r\n\r\n    const commentsWithPhotos = await Promise.all(\r\n      userComments.map(async (comment) => {\r\n        const photo = await Photo.findOne({\r\n          comments: { $in: [comment._id] },\r\n        });\r\n        return {\r\n          _id: comment._id,\r\n          comment: comment.comment,\r\n          date_time: comment.date_time,\r\n          user_id: comment.user_id,\r\n          photo: photo || null,\r\n        };\r\n      })\r\n    );\r\n\r\n    res.status(200).json(commentsWithPhotos);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\nconst getPhotoWithComments = async (req, res) => {\r\n  try {\r\n    const { photoId } = req.params;\r\n\r\n    // Tìm thông tin về ảnh dựa trên photoId\r\n    const photo = await Photo.findById(photoId);\r\n\r\n    if (!photo) {\r\n      return res.status(404).json({ message: \"Photo not found\" });\r\n    }\r\n\r\n    // Tìm tất cả các nhận xét của ảnh này\r\n    const comments = await commentModel.find({ _id: { $in: photo.comments } });\r\n\r\n    // Lặp qua mỗi nhận xét để thêm thông tin về người dùng\r\n    for (let i = 0; i < comments.length; i++) {\r\n      const user = await userModel.findById(comments[i].user_id);\r\n      comments[i].user_id = user; // Thêm thông tin về người dùng vào nhận xét\r\n    }\r\n\r\n    // Trả về thông tin về ảnh cùng với tất cả các nhận xét\r\n    res.status(200).json({ photo, comments });\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\nconst getUserById = async (req, res) => {\r\n  try {\r\n    const { userId } = req.params;\r\n\r\n    // Tìm thông tin người dùng bằng userId\r\n    const user = await userModel.findById(userId);\r\n\r\n    if (!user) {\r\n      return res.status(404).json({ message: \"User not found\" });\r\n    }\r\n\r\n    // Trả về thông tin người dùng\r\n    res.status(200).json(user);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nconst changeUser = async (req, res) => {\r\n  const userId = req.params.userId;\r\n  const { first_name, last_name, location, description, occupation } = req.body;\r\n\r\n  try {\r\n    // Find the user by ID\r\n    const user = await userModel.findById(userId);\r\n\r\n    if (!user) {\r\n      return res.status(404).json({ error: \"User not found\" });\r\n    }\r\n\r\n    // Update user information\r\n    user.first_name = first_name || user.first_name;\r\n    user.last_name = last_name || user.last_name;\r\n    user.location = location || user.location;\r\n    user.description = description || user.description;\r\n    user.occupation = occupation || user.occupation;\r\n\r\n    // Save the updated user\r\n    await user.save();\r\n\r\n    res.status(200).json({ message: \"User information updated successfully\" });\r\n  } catch (error) {\r\n    console.error(\"Error updating user:\", error);\r\n    res.status(500).json({ error: \"Internal Server Error\" });\r\n  }\r\n};\r\n\r\nconst changePassword = async (req, res) => {\r\n  const { userId } = req.params;\r\n  const { oldPassword, newPassword } = req.body;\r\n\r\n  try {\r\n    // Find the user by ID\r\n    const user = await userModel.findById(userId);\r\n\r\n    // Check if the old password matches the current password\r\n    const isValidPassword = await bcrypt.compare(oldPassword, user.password);\r\n\r\n    if (!isValidPassword) {\r\n      return res.status(400).json({ message: \"Old password is incorrect\" });\r\n    }\r\n\r\n    // Hash the new password\r\n    const salt = await bcrypt.genSalt(10);\r\n    const hashedPassword = await bcrypt.hash(newPassword, salt);\r\n\r\n    // Update the user's password\r\n    user.password = hashedPassword;\r\n\r\n    // Save the updated user\r\n    await user.save();\r\n\r\n    res.status(200).json({ message: \"Password updated successfully\" });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\nmodule.exports = {\r\n  registerUser,\r\n  createToken,\r\n  loginUser,\r\n  findUser,\r\n  getUsers,\r\n  logoutUser,\r\n  getNumberPhotoComment,\r\n  getAllCommentByUser,\r\n  getCountComment,\r\n  getAllCommentsByUser,\r\n  getPhotoWithComments,\r\n  getUserById,\r\n  changeUser,\r\n  changePassword\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1715783099096},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\BaiTapweb\\\\backend\\\\Model\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\BaiTapweb\\\\backend\",\"filename\":\"D:\\\\BaiTapweb\\\\backend\\\\Model\\\\userModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\BaiTapweb\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const mongoose = require(\"mongoose\");\nconst userSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true,\n    minlength: 3,\n    maxlength: 30\n  },\n  email: {\n    type: String,\n    required: true,\n    minlength: 3,\n    maxlength: 200,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 3,\n    maxlength: 1024\n  }\n}, {\n  timestamps: true\n});\nconst userModel = mongoose.model(\"User\", userSchema);\nmodule.exports = userModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJ1c2VyU2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsIm1pbmxlbmd0aCIsIm1heGxlbmd0aCIsImVtYWlsIiwidW5pcXVlIiwicGFzc3dvcmQiLCJ0aW1lc3RhbXBzIiwidXNlck1vZGVsIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJEOlxcQmFpVGFwd2ViXFxiYWNrZW5kXFxNb2RlbFxcIiwic291cmNlcyI6WyJ1c2VyTW9kZWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XHJcblxyXG5jb25zdCB1c2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYShcclxuICB7XHJcbiAgICBuYW1lOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIG1pbmxlbmd0aDogMywgbWF4bGVuZ3RoOiAzMCB9LFxyXG4gICAgZW1haWw6IHtcclxuICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgbWlubGVuZ3RoOiAzLFxyXG4gICAgICBtYXhsZW5ndGg6IDIwMCxcclxuICAgICAgdW5pcXVlOiB0cnVlLFxyXG4gICAgfSxcclxuICAgIHBhc3N3b3JkOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIG1pbmxlbmd0aDogMywgbWF4bGVuZ3RoOiAxMDI0IH0sXHJcbiAgfSxcclxuICB7XHJcbiAgICB0aW1lc3RhbXBzOiB0cnVlLFxyXG4gIH1cclxuKTtcclxuXHJcbmNvbnN0IHVzZXJNb2RlbCA9IG1vbmdvb3NlLm1vZGVsKFwiVXNlclwiLCB1c2VyU2NoZW1hKTtcclxubW9kdWxlLmV4cG9ydHMgPSB1c2VyTW9kZWw7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBRXBDLE1BQU1DLFVBQVUsR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQU0sQ0FDcEM7RUFDRUMsSUFBSSxFQUFFO0lBQUVDLElBQUksRUFBRUMsTUFBTTtJQUFFQyxRQUFRLEVBQUUsSUFBSTtJQUFFQyxTQUFTLEVBQUUsQ0FBQztJQUFFQyxTQUFTLEVBQUU7RUFBRyxDQUFDO0VBQ25FQyxLQUFLLEVBQUU7SUFDTEwsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxJQUFJO0lBQ2RDLFNBQVMsRUFBRSxDQUFDO0lBQ1pDLFNBQVMsRUFBRSxHQUFHO0lBQ2RFLE1BQU0sRUFBRTtFQUNWLENBQUM7RUFDREMsUUFBUSxFQUFFO0lBQUVQLElBQUksRUFBRUMsTUFBTTtJQUFFQyxRQUFRLEVBQUUsSUFBSTtJQUFFQyxTQUFTLEVBQUUsQ0FBQztJQUFFQyxTQUFTLEVBQUU7RUFBSztBQUMxRSxDQUFDLEVBQ0Q7RUFDRUksVUFBVSxFQUFFO0FBQ2QsQ0FDRixDQUFDO0FBRUQsTUFBTUMsU0FBUyxHQUFHZCxRQUFRLENBQUNlLEtBQUssQ0FBQyxNQUFNLEVBQUViLFVBQVUsQ0FBQztBQUNwRGMsTUFBTSxDQUFDQyxPQUFPLEdBQUdILFNBQVMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["mongoose","require","userSchema","Schema","name","type","String","required","minlength","maxlength","email","unique","password","timestamps","userModel","model","module","exports"],"sourceRoot":"D:\\BaiTapweb\\backend\\Model\\","sources":["userModel.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\n\r\nconst userSchema = new mongoose.Schema(\r\n  {\r\n    name: { type: String, required: true, minlength: 3, maxlength: 30 },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n      minlength: 3,\r\n      maxlength: 200,\r\n      unique: true,\r\n    },\r\n    password: { type: String, required: true, minlength: 3, maxlength: 1024 },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nconst userModel = mongoose.model(\"User\", userSchema);\r\nmodule.exports = userModel;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,UAAU,GAAG,IAAIF,QAAQ,CAACG,MAAM,CACpC;EACEC,IAAI,EAAE;IAAEC,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,IAAI;IAAEC,SAAS,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAG,CAAC;EACnEC,KAAK,EAAE;IACLL,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE,GAAG;IACdE,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IAAEP,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,IAAI;IAAEC,SAAS,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAK;AAC1E,CAAC,EACD;EACEI,UAAU,EAAE;AACd,CACF,CAAC;AAED,MAAMC,SAAS,GAAGd,QAAQ,CAACe,KAAK,CAAC,MAAM,EAAEb,UAAU,CAAC;AACpDc,MAAM,CAACC,OAAO,GAAGH,SAAS","ignoreList":[]}},"mtime":1693410592068},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\BaiTapweb\\\\backend\\\\db\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\BaiTapweb\\\\backend\",\"filename\":\"D:\\\\BaiTapweb\\\\backend\\\\db\\\\userModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\BaiTapweb\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const mongoose = require(\"mongoose\");\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: true,\n    minlength: 3,\n    maxlength: 200,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 3,\n    maxlength: 1024\n  },\n  first_name: {\n    type: String\n  },\n  last_name: {\n    type: String\n  },\n  location: {\n    type: String\n  },\n  description: {\n    type: String\n  },\n  occupation: {\n    type: String\n  }\n});\nconst userModel = mongoose.model(\"User\", userSchema);\nmodule.exports = userModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJ1c2VyU2NoZW1hIiwiU2NoZW1hIiwiZW1haWwiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJtaW5sZW5ndGgiLCJtYXhsZW5ndGgiLCJ1bmlxdWUiLCJwYXNzd29yZCIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJsb2NhdGlvbiIsImRlc2NyaXB0aW9uIiwib2NjdXBhdGlvbiIsInVzZXJNb2RlbCIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXEJhaVRhcHdlYlxcYmFja2VuZFxcZGJcXCIsInNvdXJjZXMiOlsidXNlck1vZGVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5cclxuY29uc3QgdXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gIGVtYWlsOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIG1pbmxlbmd0aDogMyxcclxuICAgIG1heGxlbmd0aDogMjAwLFxyXG4gICAgdW5pcXVlOiB0cnVlLFxyXG4gIH0sXHJcbiAgcGFzc3dvcmQ6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSwgbWlubGVuZ3RoOiAzLCBtYXhsZW5ndGg6IDEwMjQgfSxcclxuICBmaXJzdF9uYW1lOiB7IHR5cGU6IFN0cmluZyB9LFxyXG4gIGxhc3RfbmFtZTogeyB0eXBlOiBTdHJpbmcgfSxcclxuICBsb2NhdGlvbjogeyB0eXBlOiBTdHJpbmcgfSxcclxuICBkZXNjcmlwdGlvbjogeyB0eXBlOiBTdHJpbmcgfSxcclxuICBvY2N1cGF0aW9uOiB7IHR5cGU6IFN0cmluZyB9LFxyXG59KTtcclxuXHJcbmNvbnN0IHVzZXJNb2RlbCA9IG1vbmdvb3NlLm1vZGVsKFwiVXNlclwiLCB1c2VyU2NoZW1hKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gdXNlck1vZGVsO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQVUsQ0FBQztBQUVwQyxNQUFNQyxVQUFVLEdBQUcsSUFBSUYsUUFBUSxDQUFDRyxNQUFNLENBQUM7RUFDckNDLEtBQUssRUFBRTtJQUNMQyxJQUFJLEVBQUVDLE1BQU07SUFDWkMsUUFBUSxFQUFFLElBQUk7SUFDZEMsU0FBUyxFQUFFLENBQUM7SUFDWkMsU0FBUyxFQUFFLEdBQUc7SUFDZEMsTUFBTSxFQUFFO0VBQ1YsQ0FBQztFQUNEQyxRQUFRLEVBQUU7SUFBRU4sSUFBSSxFQUFFQyxNQUFNO0lBQUVDLFFBQVEsRUFBRSxJQUFJO0lBQUVDLFNBQVMsRUFBRSxDQUFDO0lBQUVDLFNBQVMsRUFBRTtFQUFLLENBQUM7RUFDekVHLFVBQVUsRUFBRTtJQUFFUCxJQUFJLEVBQUVDO0VBQU8sQ0FBQztFQUM1Qk8sU0FBUyxFQUFFO0lBQUVSLElBQUksRUFBRUM7RUFBTyxDQUFDO0VBQzNCUSxRQUFRLEVBQUU7SUFBRVQsSUFBSSxFQUFFQztFQUFPLENBQUM7RUFDMUJTLFdBQVcsRUFBRTtJQUFFVixJQUFJLEVBQUVDO0VBQU8sQ0FBQztFQUM3QlUsVUFBVSxFQUFFO0lBQUVYLElBQUksRUFBRUM7RUFBTztBQUM3QixDQUFDLENBQUM7QUFFRixNQUFNVyxTQUFTLEdBQUdqQixRQUFRLENBQUNrQixLQUFLLENBQUMsTUFBTSxFQUFFaEIsVUFBVSxDQUFDO0FBRXBEaUIsTUFBTSxDQUFDQyxPQUFPLEdBQUdILFNBQVMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["mongoose","require","userSchema","Schema","email","type","String","required","minlength","maxlength","unique","password","first_name","last_name","location","description","occupation","userModel","model","module","exports"],"sourceRoot":"D:\\BaiTapweb\\backend\\db\\","sources":["userModel.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  email: {\r\n    type: String,\r\n    required: true,\r\n    minlength: 3,\r\n    maxlength: 200,\r\n    unique: true,\r\n  },\r\n  password: { type: String, required: true, minlength: 3, maxlength: 1024 },\r\n  first_name: { type: String },\r\n  last_name: { type: String },\r\n  location: { type: String },\r\n  description: { type: String },\r\n  occupation: { type: String },\r\n});\r\n\r\nconst userModel = mongoose.model(\"User\", userSchema);\r\n\r\nmodule.exports = userModel;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,UAAU,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACrCC,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE,GAAG;IACdC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IAAEN,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,IAAI;IAAEC,SAAS,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAK,CAAC;EACzEG,UAAU,EAAE;IAAEP,IAAI,EAAEC;EAAO,CAAC;EAC5BO,SAAS,EAAE;IAAER,IAAI,EAAEC;EAAO,CAAC;EAC3BQ,QAAQ,EAAE;IAAET,IAAI,EAAEC;EAAO,CAAC;EAC1BS,WAAW,EAAE;IAAEV,IAAI,EAAEC;EAAO,CAAC;EAC7BU,UAAU,EAAE;IAAEX,IAAI,EAAEC;EAAO;AAC7B,CAAC,CAAC;AAEF,MAAMW,SAAS,GAAGjB,QAAQ,CAACkB,KAAK,CAAC,MAAM,EAAEhB,UAAU,CAAC;AAEpDiB,MAAM,CAACC,OAAO,GAAGH,SAAS","ignoreList":[]}},"mtime":1715265871475},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\BaiTapweb\\\\backend\\\\db\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\BaiTapweb\\\\backend\",\"filename\":\"D:\\\\BaiTapweb\\\\backend\\\\db\\\\photoModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\BaiTapweb\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const mongoose = require(\"mongoose\");\nconst photoSchema = new mongoose.Schema({\n  img: {\n    type: String\n  },\n  // The date and time when the photo was added to the database.\n  date_time: {\n    type: Date,\n    default: Date.now\n  },\n  // The ID of the user who created the photo.\n  user_id: mongoose.Schema.Types.ObjectId,\n  // Array of comment objects representing the comments made on this photo.\n  comments: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Comment\"\n  }]\n});\nconst photoModel = mongoose.model(\"Photo\", photoSchema);\nmodule.exports = photoModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJwaG90b1NjaGVtYSIsIlNjaGVtYSIsImltZyIsInR5cGUiLCJTdHJpbmciLCJkYXRlX3RpbWUiLCJEYXRlIiwiZGVmYXVsdCIsIm5vdyIsInVzZXJfaWQiLCJUeXBlcyIsIk9iamVjdElkIiwiY29tbWVudHMiLCJyZWYiLCJwaG90b01vZGVsIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJEOlxcQmFpVGFwd2ViXFxiYWNrZW5kXFxkYlxcIiwic291cmNlcyI6WyJwaG90b01vZGVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5cclxuY29uc3QgcGhvdG9TY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcclxuICBpbWc6IHsgdHlwZTogU3RyaW5nIH0sXHJcbiAgLy8gVGhlIGRhdGUgYW5kIHRpbWUgd2hlbiB0aGUgcGhvdG8gd2FzIGFkZGVkIHRvIHRoZSBkYXRhYmFzZS5cclxuICBkYXRlX3RpbWU6IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfSxcclxuICAvLyBUaGUgSUQgb2YgdGhlIHVzZXIgd2hvIGNyZWF0ZWQgdGhlIHBob3RvLlxyXG4gIHVzZXJfaWQ6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAvLyBBcnJheSBvZiBjb21tZW50IG9iamVjdHMgcmVwcmVzZW50aW5nIHRoZSBjb21tZW50cyBtYWRlIG9uIHRoaXMgcGhvdG8uXHJcbiAgY29tbWVudHM6IFt7IHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCwgcmVmOiBcIkNvbW1lbnRcIiB9XSxcclxufSk7XHJcblxyXG5jb25zdCBwaG90b01vZGVsID0gbW9uZ29vc2UubW9kZWwoXCJQaG90b1wiLCBwaG90b1NjaGVtYSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHBob3RvTW9kZWw7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBRXBDLE1BQU1DLFdBQVcsR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQU0sQ0FBQztFQUN0Q0MsR0FBRyxFQUFFO0lBQUVDLElBQUksRUFBRUM7RUFBTyxDQUFDO0VBQ3JCO0VBQ0FDLFNBQVMsRUFBRTtJQUFFRixJQUFJLEVBQUVHLElBQUk7SUFBRUMsT0FBTyxFQUFFRCxJQUFJLENBQUNFO0VBQUksQ0FBQztFQUM1QztFQUNBQyxPQUFPLEVBQUVYLFFBQVEsQ0FBQ0csTUFBTSxDQUFDUyxLQUFLLENBQUNDLFFBQVE7RUFDdkM7RUFDQUMsUUFBUSxFQUFFLENBQUM7SUFBRVQsSUFBSSxFQUFFTCxRQUFRLENBQUNHLE1BQU0sQ0FBQ1MsS0FBSyxDQUFDQyxRQUFRO0lBQUVFLEdBQUcsRUFBRTtFQUFVLENBQUM7QUFDckUsQ0FBQyxDQUFDO0FBRUYsTUFBTUMsVUFBVSxHQUFHaEIsUUFBUSxDQUFDaUIsS0FBSyxDQUFDLE9BQU8sRUFBRWYsV0FBVyxDQUFDO0FBRXZEZ0IsTUFBTSxDQUFDQyxPQUFPLEdBQUdILFVBQVUiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["mongoose","require","photoSchema","Schema","img","type","String","date_time","Date","default","now","user_id","Types","ObjectId","comments","ref","photoModel","model","module","exports"],"sourceRoot":"D:\\BaiTapweb\\backend\\db\\","sources":["photoModel.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\n\r\nconst photoSchema = new mongoose.Schema({\r\n  img: { type: String },\r\n  // The date and time when the photo was added to the database.\r\n  date_time: { type: Date, default: Date.now },\r\n  // The ID of the user who created the photo.\r\n  user_id: mongoose.Schema.Types.ObjectId,\r\n  // Array of comment objects representing the comments made on this photo.\r\n  comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\r\n});\r\n\r\nconst photoModel = mongoose.model(\"Photo\", photoSchema);\r\n\r\nmodule.exports = photoModel;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,WAAW,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACtCC,GAAG,EAAE;IAAEC,IAAI,EAAEC;EAAO,CAAC;EACrB;EACAC,SAAS,EAAE;IAAEF,IAAI,EAAEG,IAAI;IAAEC,OAAO,EAAED,IAAI,CAACE;EAAI,CAAC;EAC5C;EACAC,OAAO,EAAEX,QAAQ,CAACG,MAAM,CAACS,KAAK,CAACC,QAAQ;EACvC;EACAC,QAAQ,EAAE,CAAC;IAAET,IAAI,EAAEL,QAAQ,CAACG,MAAM,CAACS,KAAK,CAACC,QAAQ;IAAEE,GAAG,EAAE;EAAU,CAAC;AACrE,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGhB,QAAQ,CAACiB,KAAK,CAAC,OAAO,EAAEf,WAAW,CAAC;AAEvDgB,MAAM,CAACC,OAAO,GAAGH,UAAU","ignoreList":[]}},"mtime":1715307005656},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\BaiTapweb\\\\backend\\\\Routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\BaiTapweb\\\\backend\",\"filename\":\"D:\\\\BaiTapweb\\\\backend\\\\Routes\\\\photoRoute.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\BaiTapweb\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const express = require(\"express\");\nconst router = express.Router();\nconst photoController = require(\"../Controllers/photoController\");\nrouter.post(\"/photos/new\", photoController.newPhoto);\nrouter.get(\"/photos/user/:userId\", photoController.getPostByUser);\nrouter.post(\"/photos/:photoId/comments/new\", photoController.postCommentByUser);\nrouter.get(\"/users/:userId/photoCount\", photoController.getCountPhoto);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsInBob3RvQ29udHJvbGxlciIsInBvc3QiLCJuZXdQaG90byIsImdldCIsImdldFBvc3RCeVVzZXIiLCJwb3N0Q29tbWVudEJ5VXNlciIsImdldENvdW50UGhvdG8iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJEOlxcQmFpVGFwd2ViXFxiYWNrZW5kXFxSb3V0ZXNcXCIsInNvdXJjZXMiOlsicGhvdG9Sb3V0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcbmNvbnN0IHBob3RvQ29udHJvbGxlciA9IHJlcXVpcmUoXCIuLi9Db250cm9sbGVycy9waG90b0NvbnRyb2xsZXJcIik7XHJcblxyXG5yb3V0ZXIucG9zdChcIi9waG90b3MvbmV3XCIsIHBob3RvQ29udHJvbGxlci5uZXdQaG90byk7XHJcbnJvdXRlci5nZXQoXCIvcGhvdG9zL3VzZXIvOnVzZXJJZFwiLCBwaG90b0NvbnRyb2xsZXIuZ2V0UG9zdEJ5VXNlcik7XHJcbnJvdXRlci5wb3N0KFwiL3Bob3Rvcy86cGhvdG9JZC9jb21tZW50cy9uZXdcIiwgcGhvdG9Db250cm9sbGVyLnBvc3RDb21tZW50QnlVc2VyKTtcclxucm91dGVyLmdldChcIi91c2Vycy86dXNlcklkL3Bob3RvQ291bnRcIiwgcGhvdG9Db250cm9sbGVyLmdldENvdW50UGhvdG8pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFNLENBQUMsQ0FBQztBQUMvQixNQUFNQyxlQUFlLEdBQUdILE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQztBQUVqRUMsTUFBTSxDQUFDRyxJQUFJLENBQUMsYUFBYSxFQUFFRCxlQUFlLENBQUNFLFFBQVEsQ0FBQztBQUNwREosTUFBTSxDQUFDSyxHQUFHLENBQUMsc0JBQXNCLEVBQUVILGVBQWUsQ0FBQ0ksYUFBYSxDQUFDO0FBQ2pFTixNQUFNLENBQUNHLElBQUksQ0FBQywrQkFBK0IsRUFBRUQsZUFBZSxDQUFDSyxpQkFBaUIsQ0FBQztBQUMvRVAsTUFBTSxDQUFDSyxHQUFHLENBQUMsMkJBQTJCLEVBQUVILGVBQWUsQ0FBQ00sYUFBYSxDQUFDO0FBRXRFQyxNQUFNLENBQUNDLE9BQU8sR0FBR1YsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["express","require","router","Router","photoController","post","newPhoto","get","getPostByUser","postCommentByUser","getCountPhoto","module","exports"],"sourceRoot":"D:\\BaiTapweb\\backend\\Routes\\","sources":["photoRoute.js"],"sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\nconst photoController = require(\"../Controllers/photoController\");\r\n\r\nrouter.post(\"/photos/new\", photoController.newPhoto);\r\nrouter.get(\"/photos/user/:userId\", photoController.getPostByUser);\r\nrouter.post(\"/photos/:photoId/comments/new\", photoController.postCommentByUser);\r\nrouter.get(\"/users/:userId/photoCount\", photoController.getCountPhoto);\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,eAAe,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AAEjEC,MAAM,CAACG,IAAI,CAAC,aAAa,EAAED,eAAe,CAACE,QAAQ,CAAC;AACpDJ,MAAM,CAACK,GAAG,CAAC,sBAAsB,EAAEH,eAAe,CAACI,aAAa,CAAC;AACjEN,MAAM,CAACG,IAAI,CAAC,+BAA+B,EAAED,eAAe,CAACK,iBAAiB,CAAC;AAC/EP,MAAM,CAACK,GAAG,CAAC,2BAA2B,EAAEH,eAAe,CAACM,aAAa,CAAC;AAEtEC,MAAM,CAACC,OAAO,GAAGV,MAAM","ignoreList":[]}},"mtime":1715328286940},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\BaiTapweb\\\\backend\\\\Controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\BaiTapweb\\\\backend\",\"filename\":\"D:\\\\BaiTapweb\\\\backend\\\\Controllers\\\\photoController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\BaiTapweb\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const commentModel = require(\"../db/commentModel\");\nconst photoModel = require(\"../db/photoModel\");\nconst newPhoto = async (req, res) => {\n  try {\n    const {\n      img,\n      user_id\n    } = req.body;\n    if (!img || !user_id) {\n      res.status(400).json({\n        errCode: 1,\n        errMessage: \"Not have img or userId\"\n      });\n    }\n\n    // Create a new photo instance\n    const newPhoto = await photoModel.create({\n      img,\n      user_id\n    });\n\n    // Save the new photo to the database\n    const savedPhoto = await newPhoto.save();\n    res.status(201).json(savedPhoto);\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nconst getPostByUser = async (req, res) => {\n  try {\n    const {\n      userId\n    } = req.params;\n\n    // Find user photos and populate the comments field, including user info\n    const userPhotos = await photoModel.find({\n      user_id: userId\n    }).populate({\n      path: \"comments\",\n      populate: {\n        path: \"user_id\",\n        model: \"User\",\n        select: \"first_name last_name\" // Only select first_name and last_name fields\n      }\n    });\n\n    // Check if userPhotos is not an array, and convert it to an array if necessary\n    const photosArray = Array.isArray(userPhotos) ? userPhotos : [userPhotos];\n\n    // Send the response with the userPhotos array\n    res.status(200).json(photosArray);\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nmodule.exports = getPostByUser;\nmodule.exports = getPostByUser;\nconst postCommentByUser = async (req, res) => {\n  try {\n    const {\n      photoId\n    } = req.params;\n    const {\n      comment,\n      user_id\n    } = req.body;\n\n    // Find the photo by photoId\n    const photo = await photoModel.findById(photoId);\n    if (!photo) {\n      return res.status(404).json({\n        message: \"Photo not found\"\n      });\n    }\n\n    // Create a new comment using the Comment model\n    const newComment = await commentModel.create({\n      comment,\n      user_id\n    });\n\n    // Add the ID of the new comment to the comments array of the photo\n    photo.comments.push(newComment._id);\n\n    // Save the updated photo to the database\n    const updatedPhoto = await photo.save();\n    res.status(201).json(updatedPhoto);\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nconst getCountPhoto = async (req, res) => {\n  try {\n    const {\n      userId\n    } = req.params;\n    const photoCount = await photoModel.countDocuments({\n      user_id: userId\n    });\n\n    // Trả về kết quả với số lượng ảnh đếm được\n    res.status(200).json({\n      photoCount\n    });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: \"Internal server error\"\n    });\n  }\n};\nmodule.exports = {\n  newPhoto,\n  getPostByUser,\n  postCommentByUser,\n  getCountPhoto\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["commentModel","require","photoModel","newPhoto","req","res","img","user_id","body","status","json","errCode","errMessage","create","savedPhoto","save","err","console","error","message","getPostByUser","userId","params","userPhotos","find","populate","path","model","select","photosArray","Array","isArray","module","exports","postCommentByUser","photoId","comment","photo","findById","newComment","comments","push","_id","updatedPhoto","getCountPhoto","photoCount","countDocuments"],"sourceRoot":"D:\\BaiTapweb\\backend\\Controllers\\","sources":["photoController.js"],"sourcesContent":["const commentModel = require(\"../db/commentModel\");\r\nconst photoModel = require(\"../db/photoModel\");\r\n\r\nconst newPhoto = async (req, res) => {\r\n  try {\r\n    const { img, user_id } = req.body;\r\n    if (!img || !user_id) {\r\n      res\r\n        .status(400)\r\n        .json({ errCode: 1, errMessage: \"Not have img or userId\" });\r\n    }\r\n\r\n    // Create a new photo instance\r\n    const newPhoto = await photoModel.create({\r\n      img,\r\n      user_id,\r\n    });\r\n\r\n    // Save the new photo to the database\r\n    const savedPhoto = await newPhoto.save();\r\n\r\n    res.status(201).json(savedPhoto);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nconst getPostByUser = async (req, res) => {\r\n  try {\r\n    const { userId } = req.params;\r\n\r\n    // Find user photos and populate the comments field, including user info\r\n    const userPhotos = await photoModel.find({ user_id: userId }).populate({\r\n      path: \"comments\",\r\n      populate: {\r\n        path: \"user_id\",\r\n        model: \"User\",\r\n        select: \"first_name last_name\", // Only select first_name and last_name fields\r\n      },\r\n    });\r\n\r\n    // Check if userPhotos is not an array, and convert it to an array if necessary\r\n    const photosArray = Array.isArray(userPhotos) ? userPhotos : [userPhotos];\r\n\r\n    // Send the response with the userPhotos array\r\n    res.status(200).json(photosArray);\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nmodule.exports = getPostByUser;\r\n\r\nmodule.exports = getPostByUser;\r\n\r\nconst postCommentByUser = async (req, res) => {\r\n  try {\r\n    const { photoId } = req.params;\r\n    const { comment, user_id } = req.body;\r\n\r\n    // Find the photo by photoId\r\n    const photo = await photoModel.findById(photoId);\r\n\r\n    if (!photo) {\r\n      return res.status(404).json({ message: \"Photo not found\" });\r\n    }\r\n\r\n    // Create a new comment using the Comment model\r\n    const newComment = await commentModel.create({\r\n      comment,\r\n      user_id,\r\n    });\r\n\r\n    // Add the ID of the new comment to the comments array of the photo\r\n    photo.comments.push(newComment._id);\r\n\r\n    // Save the updated photo to the database\r\n    const updatedPhoto = await photo.save();\r\n\r\n    res.status(201).json(updatedPhoto);\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\nconst getCountPhoto = async (req, res) => {\r\n  try {\r\n    const { userId } = req.params;\r\n\r\n    const photoCount = await photoModel.countDocuments({ user_id: userId });\r\n\r\n    // Trả về kết quả với số lượng ảnh đếm được\r\n    res.status(200).json({ photoCount });\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  newPhoto,\r\n  getPostByUser,\r\n  postCommentByUser,\r\n  getCountPhoto,\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1715780308423},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\BaiTapweb\\\\backend\\\\db\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\BaiTapweb\\\\backend\",\"filename\":\"D:\\\\BaiTapweb\\\\backend\\\\db\\\\commentModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\BaiTapweb\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.5:development":{"value":{"code":"const mongoose = require(\"mongoose\");\nconst commentSchema = new mongoose.Schema({\n  comment: String,\n  // The date and time when the comment was created.\n  date_time: {\n    type: Date,\n    default: Date.now\n  },\n  // The ID of the user who created the comment.\n  user_id: mongoose.Schema.Types.ObjectId\n});\nconst commentModel = mongoose.model(\"Comment\", commentSchema);\nmodule.exports = commentModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb21tZW50U2NoZW1hIiwiU2NoZW1hIiwiY29tbWVudCIsIlN0cmluZyIsImRhdGVfdGltZSIsInR5cGUiLCJEYXRlIiwiZGVmYXVsdCIsIm5vdyIsInVzZXJfaWQiLCJUeXBlcyIsIk9iamVjdElkIiwiY29tbWVudE1vZGVsIiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJEOlxcQmFpVGFwd2ViXFxiYWNrZW5kXFxkYlxcIiwic291cmNlcyI6WyJjb21tZW50TW9kZWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XHJcblxyXG5jb25zdCBjb21tZW50U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgY29tbWVudDogU3RyaW5nLFxyXG4gIC8vIFRoZSBkYXRlIGFuZCB0aW1lIHdoZW4gdGhlIGNvbW1lbnQgd2FzIGNyZWF0ZWQuXHJcbiAgZGF0ZV90aW1lOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93IH0sXHJcbiAgLy8gVGhlIElEIG9mIHRoZSB1c2VyIHdobyBjcmVhdGVkIHRoZSBjb21tZW50LlxyXG4gIHVzZXJfaWQ6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxufSk7XHJcblxyXG5jb25zdCBjb21tZW50TW9kZWwgPSBtb25nb29zZS5tb2RlbChcIkNvbW1lbnRcIiwgY29tbWVudFNjaGVtYSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGNvbW1lbnRNb2RlbDtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFFcEMsTUFBTUMsYUFBYSxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBTSxDQUFDO0VBQ3hDQyxPQUFPLEVBQUVDLE1BQU07RUFDZjtFQUNBQyxTQUFTLEVBQUU7SUFBRUMsSUFBSSxFQUFFQyxJQUFJO0lBQUVDLE9BQU8sRUFBRUQsSUFBSSxDQUFDRTtFQUFJLENBQUM7RUFDNUM7RUFDQUMsT0FBTyxFQUFFWCxRQUFRLENBQUNHLE1BQU0sQ0FBQ1MsS0FBSyxDQUFDQztBQUNqQyxDQUFDLENBQUM7QUFFRixNQUFNQyxZQUFZLEdBQUdkLFFBQVEsQ0FBQ2UsS0FBSyxDQUFDLFNBQVMsRUFBRWIsYUFBYSxDQUFDO0FBRTdEYyxNQUFNLENBQUNDLE9BQU8sR0FBR0gsWUFBWSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["mongoose","require","commentSchema","Schema","comment","String","date_time","type","Date","default","now","user_id","Types","ObjectId","commentModel","model","module","exports"],"sourceRoot":"D:\\BaiTapweb\\backend\\db\\","sources":["commentModel.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\n\r\nconst commentSchema = new mongoose.Schema({\r\n  comment: String,\r\n  // The date and time when the comment was created.\r\n  date_time: { type: Date, default: Date.now },\r\n  // The ID of the user who created the comment.\r\n  user_id: mongoose.Schema.Types.ObjectId,\r\n});\r\n\r\nconst commentModel = mongoose.model(\"Comment\", commentSchema);\r\n\r\nmodule.exports = commentModel;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,aAAa,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACxCC,OAAO,EAAEC,MAAM;EACf;EACAC,SAAS,EAAE;IAAEC,IAAI,EAAEC,IAAI;IAAEC,OAAO,EAAED,IAAI,CAACE;EAAI,CAAC;EAC5C;EACAC,OAAO,EAAEX,QAAQ,CAACG,MAAM,CAACS,KAAK,CAACC;AACjC,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGd,QAAQ,CAACe,KAAK,CAAC,SAAS,EAAEb,aAAa,CAAC;AAE7Dc,MAAM,CAACC,OAAO,GAAGH,YAAY","ignoreList":[]}},"mtime":1715313940595}}